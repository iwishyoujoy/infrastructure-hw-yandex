name: Release

on:
  create:
    tags:
      - 'v*'

jobs:
  build:
    name: release process
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    
    - name: Install dependencies
      run: npm ci

    - name: Check release version from tag
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    
    - name: Generate changelog
      run: npx standard-version --skip.commit --skip.tag

    - name: Upload Changelog
      uses: actions/upload-artifact@v2
      with:
        name: Changelog
        path: CHANGELOG.md

    - name: Read Changelog
      id: changelog
      run: |
        echo "::set-output name=body::$(cat ./CHANGELOG.md | sed 's/$/\\n/' | tr -d '\n')"

    - name: Create Release Issue
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.RELEASE_PAT }}
        script: |
          const issueTitle = `Release ${process.env.RELEASE_VERSION}`
          let body = `Author: ${context.payload.sender.login}\n`
          body += `Date: ${new Date().toLocaleString()}\n`
          body += `Version: ${process.env.RELEASE_VERSION}\n\n`
          body += 'Changelog: \n'
          body += `${{ steps.changelog.outputs.body }}\n`
          
          // searching for issue
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo
          })

          const existingIssue = issues.find(issue => issue.title === issueTitle)

          if (existingIssue) {
            // if issue exists, update it
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: existingIssue.number,
              body: body
            })
          } else {
            // if issue doesn't exist, create new one
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: body,
              labels: ['RELEASE']
            })